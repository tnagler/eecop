% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{solve_eecop}
\alias{solve_eecop}
\title{Generic solver for copula-based estimating equations}
\usage{
solve_eecop(object, x, idfun, theta_start, ...)
}
\arguments{
\item{object}{a fitted \link{eecop} object.}

\item{x}{covariate values to predict on; must match the format used for
fitting the \code{eecop()} model.}

\item{idfun}{a function with signature \verb{function(y, theta)} with \code{y} the
response (vector or matrix) and \code{theta} the parameter of interest. The
function should return a vector of length \code{NROW(object$y)} or a matrix with
\code{NROW(object$y)} rows.}

\item{theta_start}{starting values for optimizing the parameter of interest.}

\item{...}{further arguments passed to \code{\link[=optim]{optim()}}.}
}
\value{
The optimal parameter \code{theta}.
}
\description{
Solves an estimating equation based on a fitted \link{eecop} model and
user-supplied identifying function.
}
\examples{
## fit dummy model
x <- matrix(rnorm(200), 100, 2)
y <- rowSums(x) + rnorm(100)
fit <- eecop(y, x)

## identifying function for 0.5 and 0.9 quantiles
idfun <- function(y, theta) {
  t <- c(0.5, 0.9)
  gmat <- matrix(NA, NROW(y), 2)
  for (j in 1:2) gmat[, j] <- (y <= theta[j]) - t[j]
  gmat
}

## solve estimating equation
solve_eecop(fit, x[1:3, ], idfun = idfun, theta_start = rep(0, 2))
}
